///////////////////////////////////////////////////////////
//  Familia.cs
//  Implementation of the Class Familia
//  Generated by Enterprise Architect
//  Created on:      14-may.-2021 21:47:37
//  Original author: gasto
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

namespace SL.Domain.Composite {
	/// <summary>
	/// This class (a) defines behaviour for components having children, (b) stores
	/// child components, and (c) implements child-related operations in the Component
	/// interface.
	/// </summary>
	public class Familia : FamiliaPatente {

		private List<FamiliaPatente> listaFamiliaPatente = new List<FamiliaPatente>();

		public Familia(FamiliaPatente familiaPatente)
		{
			Add(familiaPatente); //No hay familias sin hijos...
		}

		/// 
		/// <param name="component"></param>
		public override void Add(FamiliaPatente component){

			listaFamiliaPatente.Add(component);

		}       

        /// 
        /// <param name="component"></param>
        public override void Remove(FamiliaPatente component){

			//Verificar cómo se elimina? Verificar que la familia tenga al menos un hijo siempre...
			listaFamiliaPatente.Remove(component);

		}

		public override int ChildrenCount()
		{
			return listaFamiliaPatente.Count;
		}

		public List<FamiliaPatente> Permisos
		{
			get
			{
				return this.listaFamiliaPatente;
			}
		}

        //PODRÍA UNA FAMILIA NO TENER NINGÚN HIJO?


    }//end Familia

}//end namespace Extra