///////////////////////////////////////////////////////////
//  Patente.cs
//  Implementation of the Class Patente
//  Generated by Enterprise Architect
//  Created on:      14-may.-2021 21:47:35
//  Original author: gasto
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;


namespace SL.Domain.Composite
{
	/// <summary>
	/// This class (a) represents leaf objects in the composition, and (b) defines
	/// behaviour for primitive objects in the composition.
	/// </summary>
	public class Patente : FamiliaPatente {

		public Patente(){

		}

		/// <summary>
		/// No hay hijos porque es un elemento de tipo hoja (Primitivo)
		/// </summary>
		/// <returns></returns>
        public override int ChildrenCount()
        {
            return 0;
        }

		public override void Add(FamiliaPatente component)
		{
			//???????
			throw new Exception("No puedo agregar elementos. Soy primitivo.");
		}

		public override void Remove(FamiliaPatente component){
			//// cannot remove from a leaf
			throw new Exception("No puedo quitar elementos. Soy primitivo.");
		}

		//LAS HOJAS NO TIENEN HIJOS...

	}//end Patente

}//end namespace Extra